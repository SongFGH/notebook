#1, O(g(n)) stands for some anonymous
function in the set O(g(n))
多项式最高阶项右边(低阶项)

#2, there is a way to choose the
corresponding anonymous functions on the right-hand side to make the equation valid
多项式的最高阶项

#3, O(1), log(n), O(n), nlog(n), n^p, 2^n

#4, Each line of code takes a constant amount of time
    Each line takes the same amount of time every time it is executed

#5, 非上界,非下界,中界 an asymptotically tight bound 最高阶

#6. Adjacency list, Adjacency matrix

#7. divide , conquer, combine

#8. when faced with a set of possible actions, it always picks the one that looks best at the moment

#9. Optimal substructure, Iterative optimality

#10. an optimization technique which breaks a problem into subproblems

#11. Optimal substructure, Overlapping subproblems

#12. sequential complexity divide parallel time S_p(n) = T*(n) / T_p(n)

#13. running time of the parallel algorithm with a single processor E_p(n) = T_1(n) / p T_p(n)

#14. how much we can speed up processing with more processors T_1(n) / p T_infite(n)

#15. directed graphs: Have no directed cycles, Suitable for modeling causal processes and precedence relations
    
#16. Nodes with zero in-degree are inputs (also called leafs)
    Nodes with zero out-degree are outputs (also called roots or sinks)
    For simplicity, here we assume all internal vertices have in-degree <= 2
    best-suited for numerical computations
    
    looks like a tree rather than a graph
    
#17. $ T_p(n) = min {\min_{i\in N} (n)}$

#18. global memory , many processors have access to. 

#19. synchronous mode, all processors operate in lock-step, under a common clock. called parallel random-access
machine (PRAM) model
     asynchronous mode, each processor has a independent clock

#20. multiple instruction multiple data

#21. global read (X; Y ) moves the data or variable X into the local memory Y
     global write (U; V ) does the opposite  from local memory U to shared memory V
     
#22. Exclusive read exclusive write (EREW)
     Concurrent read exclusive write (CREW)
     Concurrent read concurrent write (CRCW)
     
#23.    Common CRCW PRAM
            Allows concurrent writes only when all processors attempt to write the same value
        Arbitrary CRCW PRAM
            Allows an arbitrary processor to succeed
        Priority CRCW PRAM
            Assumes processors have a priority (based on their ids)
            The lowest id wins

#24. A network is a graph G = (V;E)
        V are the processors
        The edges E are two-way communication links between processors
     synchronous or asynchronous
     
#25. Routing algorithms transmit a message through a network

#26.    Diameter: maximum distance between any two nodes
        Maximum degree: of any node in G
        Node and edge connectivity: the minimum number of nodes (edges) whose removal disconnects the graph
        
